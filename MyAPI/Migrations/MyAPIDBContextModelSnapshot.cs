// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAPI.Data;

#nullable disable

namespace MyAPI.Migrations
{
    [DbContext(typeof(MyAPIDBContext))]
    partial class MyAPIDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyAPI.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec689ad5-2d6f-4011-a005-6af5b39ecd83"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("b2b42162-1c2a-4da1-9978-d5df0f3551e9"),
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = new Guid("25ff9e69-0b60-4643-8320-973662ee2e15"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("MyAPI.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d889a6b8-7bea-40a4-be8b-b21c9eda2a51"),
                            Code = "N",
                            Name = "North",
                            RegionImageUrl = "n.pjg"
                        },
                        new
                        {
                            Id = new Guid("39528d95-4f8f-48d9-a685-aded7b946f2f"),
                            Code = "S",
                            Name = "South",
                            RegionImageUrl = "s.jpg"
                        },
                        new
                        {
                            Id = new Guid("938f4c68-7e31-4427-ab38-48c9f3cdf683"),
                            Code = "E",
                            Name = "East",
                            RegionImageUrl = "e.jpg"
                        },
                        new
                        {
                            Id = new Guid("b6803ecb-f2a9-4497-94b8-672bab7bf629"),
                            Code = "W",
                            Name = "West",
                            RegionImageUrl = "w.jpg"
                        });
                });

            modelBuilder.Entity("MyAPI.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("MyAPI.Models.Domain.Walk", b =>
                {
                    b.HasOne("MyAPI.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyAPI.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
